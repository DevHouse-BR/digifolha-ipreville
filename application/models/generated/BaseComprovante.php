<?php

/**
 * BaseComprovante
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $servidor_publico_id
 * @property integer $postagem_id
 * @property string $nome_empresa
 * @property string $cnpj
 * @property string $nome_funcionario
 * @property string $matricula
 * @property string $funcao
 * @property string $setor
 * @property string $mes_referencia
 * @property string $data_admissao
 * @property string $banco
 * @property string $agencia
 * @property string $conta_corrente
 * @property string $salario_base
 * @property string $total_proventos
 * @property string $total_descontos
 * @property string $liquido
 * @property string $f_irrf
 * @property string $base_calc_irrf
 * @property string $sal_cont_inss
 * @property string $base_calc_fgts
 * @property string $fgts_mes
 * @property string $vinculo
 * @property string $categoria_vinculo
 * @property string $nivel_salarial
 * @property string $cpf
 * @property string $salario_hora
 * @property string $base_consignados
 * @property string $mensagem_1
 * @property string $mensagem_2
 * @property string $mensagem_3
 * @property ServidorPublico $ServidorPublico
 * @property Postagem $Postagem
 * @property Doctrine_Collection $ComprovanteLinha
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseComprovante extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('comprovante');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => '8',
             ));
        $this->hasColumn('servidor_publico_id', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => '8',
             ));
        $this->hasColumn('postagem_id', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => '8',
             ));
        $this->hasColumn('nome_empresa', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('cnpj', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('nome_funcionario', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('matricula', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('funcao', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('setor', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('mes_referencia', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('data_admissao', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('banco', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('agencia', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('conta_corrente', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('salario_base', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('total_proventos', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('total_descontos', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('liquido', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('f_irrf', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('base_calc_irrf', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('sal_cont_inss', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('base_calc_fgts', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('fgts_mes', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('vinculo', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('categoria_vinculo', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('nivel_salarial', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('cpf', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('salario_hora', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('base_consignados', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('mensagem_1', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('mensagem_2', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('mensagem_3', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ServidorPublico', array(
             'local' => 'servidor_publico_id',
             'foreign' => 'id'));

        $this->hasOne('Postagem', array(
             'local' => 'postagem_id',
             'foreign' => 'id'));

        $this->hasMany('ComprovanteLinha', array(
             'local' => 'id',
             'foreign' => 'comprovante_id'));
    }
}