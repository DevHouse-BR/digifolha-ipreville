<?php

/**
 * BaseComprovanteLinha
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $comprovante_id
 * @property integer $codigo
 * @property string $descricao
 * @property string $referencia
 * @property string $valor
 * @property string $tipo
 * @property Comprovante $Comprovante
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseComprovanteLinha extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('comprovante_linha');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('comprovante_id', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => '8',
             ));
        $this->hasColumn('codigo', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('descricao', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('referencia', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '255',
             ));
        $this->hasColumn('valor', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('tipo', 'string', 1, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '1',
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Comprovante', array(
             'local' => 'comprovante_id',
             'foreign' => 'id'));
    }
}